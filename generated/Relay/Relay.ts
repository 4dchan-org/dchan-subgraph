// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Message extends ethereum.Event {
  get params(): Message__Params {
    return new Message__Params(this);
  }
}

export class Message__Params {
  _event: Message;

  constructor(event: Message) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ipfs_hash(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Relay extends ethereum.SmartContract {
  static bind(address: Address): Relay {
    return new Relay("Relay", address);
  }
}

export class MessageCall extends ethereum.Call {
  get inputs(): MessageCall__Inputs {
    return new MessageCall__Inputs(this);
  }

  get outputs(): MessageCall__Outputs {
    return new MessageCall__Outputs(this);
  }
}

export class MessageCall__Inputs {
  _call: MessageCall;

  constructor(call: MessageCall) {
    this._call = call;
  }

  get ipfs_hash(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class MessageCall__Outputs {
  _call: MessageCall;

  constructor(call: MessageCall) {
    this._call = call;
  }
}
